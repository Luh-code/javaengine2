import org.gradle.internal.jvm.Jvm
import org.gradle.internal.os.OperatingSystem

plugins {
    id 'java'
    id 'application'
    id 'c'
}

project.ext.lwjglVersion = "3.3.2"

switch (OperatingSystem.current()) {
    case OperatingSystem.LINUX:
        project.ext.lwjglNatives = "natives-linux"
        break
    case OperatingSystem.MAC_OS:
        project.ext.lwjglNatives = "natives-macos"
        break
    case OperatingSystem.WINDOWS:
        project.ext.lwjglNatives = "natives-windows"
        break
}

//mainClassName = 'Main'

group = 'org.app'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'

    //def jogl = '2.3.2'

    //testImplementation("org.jogamp.gluegen:gluegen-rt-main:$jogl")
    //testImplementation("org.jogamp.jogl:jogl-all-main:$jogl")

    testImplementation platform("org.lwjgl:lwjgl-bom:$lwjglVersion")

    testImplementation "org.lwjgl:lwjgl"
    testImplementation "org.lwjgl:lwjgl-assimp"
    testImplementation "org.lwjgl:lwjgl-bgfx"
    testImplementation "org.lwjgl:lwjgl-cuda"
    testImplementation "org.lwjgl:lwjgl-egl"
    testImplementation "org.lwjgl:lwjgl-fmod"
    testImplementation "org.lwjgl:lwjgl-freetype"
    testImplementation "org.lwjgl:lwjgl-glfw"
    testImplementation "org.lwjgl:lwjgl-harfbuzz"
    testImplementation "org.lwjgl:lwjgl-hwloc"
    testImplementation "org.lwjgl:lwjgl-jawt"
    testImplementation "org.lwjgl:lwjgl-jemalloc"
    testImplementation "org.lwjgl:lwjgl-ktx"
    testImplementation "org.lwjgl:lwjgl-libdivide"
    testImplementation "org.lwjgl:lwjgl-llvm"
    testImplementation "org.lwjgl:lwjgl-lmdb"
    testImplementation "org.lwjgl:lwjgl-lz4"
    testImplementation "org.lwjgl:lwjgl-meow"
    testImplementation "org.lwjgl:lwjgl-meshoptimizer"
    testImplementation "org.lwjgl:lwjgl-nanovg"
    testImplementation "org.lwjgl:lwjgl-nfd"
    testImplementation "org.lwjgl:lwjgl-nuklear"
    testImplementation "org.lwjgl:lwjgl-odbc"
    testImplementation "org.lwjgl:lwjgl-openal"
    testImplementation "org.lwjgl:lwjgl-opencl"
    testImplementation "org.lwjgl:lwjgl-opengl"
    testImplementation "org.lwjgl:lwjgl-opengles"
    //testImplementation "org.lwjgl:lwjgl-openvr"
    testImplementation "org.lwjgl:lwjgl-openxr"
    testImplementation "org.lwjgl:lwjgl-opus"
    //testImplementation "org.lwjgl:lwjgl-ovr"
    testImplementation "org.lwjgl:lwjgl-par"
    testImplementation "org.lwjgl:lwjgl-remotery"
    testImplementation "org.lwjgl:lwjgl-rpmalloc"
    testImplementation "org.lwjgl:lwjgl-shaderc"
    testImplementation "org.lwjgl:lwjgl-spvc"
    testImplementation "org.lwjgl:lwjgl-sse"
    testImplementation "org.lwjgl:lwjgl-stb"
    testImplementation "org.lwjgl:lwjgl-tinyexr"
    testImplementation "org.lwjgl:lwjgl-tinyfd"
    testImplementation "org.lwjgl:lwjgl-tootle"
    testImplementation "org.lwjgl:lwjgl-vma"
    testImplementation "org.lwjgl:lwjgl-vulkan"
    testImplementation "org.lwjgl:lwjgl-xxhash"
    testImplementation "org.lwjgl:lwjgl-yoga"
    testImplementation "org.lwjgl:lwjgl-zstd"
    runtimeOnly "org.lwjgl:lwjgl::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-assimp::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-bgfx::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-freetype::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-glfw::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-harfbuzz::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-hwloc::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-jemalloc::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-ktx::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-libdivide::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-llvm::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-lmdb::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-lz4::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-meow::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-meshoptimizer::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-nanovg::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-nfd::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-nuklear::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-openal::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-opengl::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-opengles::$lwjglNatives"
    //runtimeOnly "org.lwjgl:lwjgl-openvr::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-openxr::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-opus::$lwjglNatives"
    //runtimeOnly "org.lwjgl:lwjgl-ovr::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-par::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-remotery::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-rpmalloc::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-shaderc::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-spvc::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-sse::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-stb::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-tinyexr::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-tinyfd::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-tootle::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-vma::$lwjglNatives"
    if (lwjglNatives == "natives-macos") runtimeOnly "org.lwjgl:lwjgl-vulkan::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-xxhash::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-yoga::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-zstd::$lwjglNatives"

    testImplementation("io.github.spair:imgui-java-app:1.86.10")
}

application {
    applicationDefaultJvmArgs = ["-Djava.library.path=" + file("${buildDir}/libs/ecs/shared").absolutePath,
                                 "-java.library.path=" + file("${buildDir}/libs/ecs/shared").absolutePath]
}

model {
    platforms {
        x64 {
            architecture "x86_64"
        }
    }

    components {
        ecs(NativeLibrarySpec) {
            targetPlatform "x64"
            binaries.all {
                def jvmHome = Jvm.current().javaHome
                if (targetPlatform.operatingSystem.macOsX) {
                    cCompiler.args '-I', "${jvmHome}/include"
                    cCompiler.args '-I', "${jvmHome}/include/darwin"
                    cCompiler.args '-mmacosx-version-min=10.4'
                    linker.args '-mmacosx-version-min=10.4'
                } else if (targetPlatform.operatingSystem.linux) {
                    cCompiler.args '-I', "${jvmHome}/include"
                    cCompiler.args '-I', "${jvmHome}/include/linux"
                    cCompiler.args '-D_FILE_OFFSET_BITS=64'
                } else if (targetPlatform.operatingSystem.windows) {
                    cCompiler.args "-I${jvmHome}/include"
                    cCompiler.args "-I${jvmHome}/include/win32"
                } else if (targetPlatform.operatingSystem.freeBSD) {
                    cCompiler.args '-I', "${jvmHome}/include"
                    cCompiler.args '-I', "${jvmHome}/include/freebsd"
                }
            }
        }
    }
}

//classes.dependsOn 'ecsSharedLibrary'

test {
    useJUnitPlatform()
}